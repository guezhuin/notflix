#!/bin/sh
# .githooks/pre-commit

# Colors for display
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "${BLUE}🔍 Running pre-commit checks...${NC}"

# Check that we're in a virtual environment
if [ -z "$VIRTUAL_ENV" ]; then
    echo "${YELLOW}⚠️  Warning: Virtual environment not detected. Consider activating it.${NC}"
fi

# Change to the backend directory
cd backend || exit 1

# Check for required files
if [ ! -f "requirements/dev.txt" ]; then
    echo "${RED}❌ requirements/dev.txt not found${NC}"
    exit 1
fi

# Install dependencies if necessary
if [ ! -d ".venv" ] && [ -z "$VIRTUAL_ENV" ]; then
    echo "${YELLOW}📦 Installing dependencies...${NC}"
    pip install -r requirements/dev.txt > /dev/null 2>&1
fi

# # 1. Check code format with Ruff
# echo "${BLUE}🎨 Checking code format...${NC}"
# if ! ruff format --check . --quiet; then
#     echo "${RED}❌ Code format check failed. Run 'ruff format .' to fix.${NC}"
#     exit 1
# fi

# # 2. Check linting with Ruff
# echo "${BLUE}🔍 Running linter...${NC}"
# if ! ruff check . --quiet; then
#     echo "${RED}❌ Linting failed. Run 'ruff check . --fix' to fix auto-fixable issues.${NC}"
#     exit 1
# fi

# 3. Check security vulnerabilities
echo "${BLUE}🛡️  Checking security vulnerabilities...${NC}"
if ! pip-audit -r requirements/base.txt --quiet; then
    echo "${RED}❌ Security vulnerabilities found!${NC}"
    exit 1
fi

# 4. Check Django migrations
echo "${BLUE}🗄️  Checking Django migrations...${NC}"
cd app || exit 1
if ! python manage.py makemigrations --check --dry-run --settings=config.settings.dev > /dev/null 2>&1; then
    echo "${RED}❌ Missing migrations detected. Run 'python manage.py makemigrations'.${NC}"
    exit 1
fi

# 5. Check Django configuration
echo "${BLUE}⚙️  Checking Django configuration...${NC}"
if ! python manage.py check --settings=config.settings.dev > /dev/null 2>&1; then
    echo "${RED}❌ Django configuration check failed.${NC}"
    exit 1
fi

# 6. Run quick tests
echo "${BLUE}🧪 Running quick tests...${NC}"
if ! python -m pytest -x --quiet --tb=no -m "not slow" > /dev/null 2>&1; then
    echo "${RED}❌ Quick tests failed. Run 'pytest' for details.${NC}"
    exit 1
fi

echo "${GREEN}✅ All pre-commit checks passed!${NC}"
exit 0